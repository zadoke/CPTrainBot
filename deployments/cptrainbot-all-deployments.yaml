#Discord Bot Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
    name: cptrainbot
spec:
    replicas: 1
    selector:
        matchLabels:
            service: cptrainbot
    template:
        metadata:
            labels:
                service: cptrainbot
        spec:
            containers:
                - env:
                      - name: BACKEND_URL
                        value: http://chrona:3000
                      - name: CLIENT_ID
                        valueFrom:
                            secretKeyRef:
                                name: cptrainbot-credentials
                                key: client-id
                      - name: TOKEN
                        valueFrom:
                            secretKeyRef:
                                name: cptrainbot-credentials
                                key: token
                  image: zadoke/cptrainbot:latest
                  imagePullPolicy: Always
                  name: cptrainbot
                  resources: {}
            restartPolicy: Always
---
#Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
    name: chrona
spec:
    replicas: 2
    selector:
        matchLabels:
            service: chrona
    template:
        metadata:
            labels:
                service: chrona
        spec:
            containers:
                - env:
                      - name: SERVER_PORT
                        value: '3000'
                  image: zadoke/chrona:latest
                  imagePullPolicy: Always
                  name: chrona
                  ports:
                      - containerPort: 3000
                  resources: {}
            restartPolicy: Always
---
#Backend Service
apiVersion: v1
kind: Service
metadata:
    name: chrona
spec:
    ports:
        - name: '3000'
          port: 3000
          targetPort: 3000
    selector:
        service: chrona
